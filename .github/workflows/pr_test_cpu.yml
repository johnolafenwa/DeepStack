name: DevTest
on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master
jobs:
  docker-cpu-build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repo
      uses: actions/checkout@master
    - name: Fetch GIT LFS
      run: git lfs checkout && git lfs pull
    - name: Install Pytest
      run: pip3 install pytest
    - name: Install Wget
      run: pip3 install wget
    - name: Install PIL
      run: pip3 install pillow
    - name: Download Binary Dependencies
      run: python3 download_dependencies.py
    - name: Clean DeepStack Container
      run: docker container rm -f deepstack
      continue-on-error: true
    - name: Build DeepStack CPU Version
      run: docker build -t deepquestai/deepstack:cpu . -f Dockerfile.cpu
    - name: Test Scene
      run: |
        docker run -d --name deepstack -e VISION-SCENE=True -p 80:5000 deepquestai/deepstack:cpu
        cd tests
        export TEST_DATA_DIR=$PWD"/test_data"
        export TEST_DEEPSTACK_URL="http://localhost:80"
        cd scene
        python3 -m pytest
        docker container rm -f deepstack

    - name: Test Detection
      run: |
        docker run -d --name deepstack -e VISION-DETECTION=True -p 80:5000 deepquestai/deepstack:cpu
        cd tests
        export TEST_DATA_DIR=$PWD"/test_data"
        export TEST_DEEPSTACK_URL="http://localhost:80"
        cd detection
        python3 -m pytest
        docker container rm -f deepstack

    - name: Test Face
      run: |
        docker run -d --name deepstack -e VISION-FACE=True -p 80:5000 deepquestai/deepstack:cpu
        cd tests
        export TEST_DATA_DIR=$PWD"/test_data"
        export TEST_DEEPSTACK_URL="http://localhost:80"
        cd face
        python3 -m pytest
        docker container rm -f deepstack

    - name: Test Custom Detection
      run: |
        cd tests
        modeldir=$(pwd)
        docker run -d --name deepstack -v $modeldir/"test_data":/modelstore/detection -p 80:5000 deepquestai/deepstack:cpu
        export TEST_DATA_DIR=$PWD"/test_data"
        export TEST_DEEPSTACK_URL="http://localhost:80" 
        cd custom
        python3 -m pytest
        docker container rm -f deepstack
    - name: Test Enhance
      run: |
        docker run -d --name deepstack -e VISION-ENHANCE=True -p 80:5000 deepquestai/deepstack:cpu
        cd tests
        export TEST_DATA_DIR=$PWD"/test_data"
        export TEST_DEEPSTACK_URL="http://localhost:80"
        cd enhance
        python3 -m pytest
        docker container rm -f deepstack
    - name: Test Landmark Detection
      run: |
        docker run -d --name deepstack -e VISION_LANDMARK=True -p 80:5000 deepquestai/deepstack:cpu
        cd tests
        export TEST_DATA_DIR=$PWD"/test_data"
        export TEST_DEEPSTACK_URL="http://localhost:80"
        cd landmarkdetection
        python3 -m pytest
        docker container rm -f deepstack

  windows-build:
    runs-on: windows-2019
    steps:
      - name: Checkout repo
        uses: actions/checkout@master
      - name: Fetch GIT LFS
        run: git lfs checkout && git lfs pull
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install Pytest and Requests
        run: pip install pytest requests
      - name: Setup Golang
        uses: actions/setup-go@v2
      - name: Download Binary Dependencies
        run: .\download_dependencies.ps1
      - name: Build DeepStack Go Component
        run: cd server && go build -o deepstack.exe
      - name: Generate CPU Build Script
        run: .\generate_windows_setup.ps1 -Platform CPU -Version 1.0
      - name: Build CPU Version 
        run: .\build_windows.ps1
      - name: Install DeepStack CPU Version
        run: |
          $deepstack_installer = [System.IO.Directory]::GetCurrentDirectory()+"\Output\DeepStack-Installer-CPU.exe"
          Start-Process -FilePath $deepstack_installer -ArgumentList "/VERYSILENT" -Wait -NoNewWindow
      - name: Test Scene
        run: |
          cd tests
          $ErrorActionPreference = "Stop"
          $env:TEST_DATA_DIR=[System.IO.Directory]::GetCurrentDirectory()+"\tests\test_data"
          $env:TEST_DEEPSTACK_URL="http://localhost:80"
          Start-Process -FilePath "C:\DeepStack\deepstack.exe" -ArgumentList "--VISION-SCENE=True --PORT 80" -NoNewWindow
          Start-Sleep 30
          cd scene
          python -m pytest
          
